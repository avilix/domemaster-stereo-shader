//  Version 1.4 Build 4 - Dec 6, 2013
//
// Procedure Name:
//	AEdomeAFL_FOVTemplate
//  
// Description:
//	Creates the attribute editor controls for the domeAFL_FOV shader
//
// Version History
// -----------------
//
//	Version 1.4 - Build 4
// -----------------------
// Dec 6, 2013 
//
// Changed the default for the domeAFL_FOV node's preview shape to wireframe.
//
//	Version 1.4 - Build 3
// -----------------------
// Oct 6, 2013 
// Initial Release 
//
// Copied base AE template file from domeAFL_FOV_Stereo node
//
// Added new dome controls for FOV Preview Controls
// The settings are stored as extra attributes on the lens shader node.
//
// Author:
//	Andrew Hazelden
//
//	Contact:
//	andrew@andrewhazelden.com
//


//---------------------------------------------------------------------------------
// New Dome Radius GUI Controls
//---------------------------------------------------------------------------------

//Return the name of the Node's Attr
global proc string dome_AEStripNodeName (string $nodeName)
{
	string $buffer[];
	tokenize $nodeName "." $buffer;
	return $buffer[1];
}


//Return the base name of the Node
global proc string dome_AEStripAttrName (string $nodeName)
{
	string $buffer[];
	tokenize $nodeName "." $buffer;
	return $buffer[0];
}


//Find the shape node
//example: print `getObjectShapeNode( "domeAFL_FOV_Camera1")`;
global proc string getObjectShapeNode ( string $object ) {
  string $shapes[] = `listRelatives -children -shapes $object`;
  return $shapes[0];
}


//Find the object's parent node
//example: print `getObjectParentNode( "domeAFL_FOV_CameraShape2")`;
global proc string getObjectParentNode ( string $object ) {
  string $shapes[] = `listRelatives -parent -shapes $object`;
  return $shapes[0];
}


//This creates the Double Sided Preview Shape checkbox in the attribute editor
global proc domeAFL_FOV_DoubleSidedPreviewShapeNew( string $attrName )
{
  string $menuName = "Double Sided Shading" ;
  // Double Sided Preview Shape Menu
  attrEnumOptionMenuGrp
    -label $menuName
    -attribute $attrName
    -enumeratedItem 0 "Double Sided"
    -enumeratedItem 1 "Show Backfaces"
    -enumeratedItem 2 "Show Frontfaces"
    -annotation 
    "Double Sided shading makes the inside and outside surfaces of the \"FOV Preview dome\" visible. Setting the \nmode to show frontfaces or backfaces can make it easier to see through the shaded dome shape."
    domeAFL_FOV_DoubleSidedPreviewShape;
}


//Double Sided Preview Shape
global proc domeAFL_FOV_DoubleSidedPreviewShapeReplace( string $attrName )
{
  // Install connection between the doubleSidedPreviewShape attribute and the options Menu
 attrEnumOptionMenuGrp -edit -attribute $attrName domeAFL_FOV_DoubleSidedPreviewShape;
}


//Create the field of view and dome radius preview shape 
global proc AEdomeAFL_FOV_AddPreviewShape (string $nodeName)
{
  //separate the node name from the node.attribute name
  string $baseNodeName = dome_AEStripAttrName($nodeName);

   //string $baseNodeName = "domeAFL_FOV";
   //string $parentNodeName = getObjectParentNode($baseNodeName);
   //print($parentNodeName);
   
   //string $baseNodeName = "domeAFL_FOV";
   //string $list[] = `listConnections -s $baseNodeName`;

  source "domeRadius.mel";
  //domeRadius("domeAFL_FOV");
  domeRadius($baseNodeName);
  
  //Reselect the DomeAFL node after creating the preview shape
  select -cl;
  select $baseNodeName;
 }


//This creates the controls in the attribute editor
global proc AEdomeAFL_FOV_AddDynamicAttrs( string $nodeName )
{
  //separate the node name from the node.attribute name
  string $baseNodeName = dome_AEStripAttrName($nodeName);
  
  int $NewDomeSetup = 0;
  
  //Add a version number attribute to the extra attribute fields
  string $attrName ="domeVersion";
  int $domeVersion = 1;
  if (!`attributeExists $attrName $baseNodeName`) {
    addAttr -ln $attrName -at long -min 0 $baseNodeName;
    setAttr ($baseNodeName+"."+$attrName) $domeVersion;
    print("Adding custom attribute " + $baseNodeName +"." +$attrName + "\n");
    
    $NewDomeSetup = 1;
    
    
    string $nodeType = "domeAFL_FOV";
    //Add the Attribute Editor node "help menu" link
    addAttributeEditorNodeHelp(
      $nodeType,
      "showHelp -absolute \"https://code.google.com/p/domemaster-stereo-shader/w/list\"");
  }

  //---------------------------------------------------------------------
  //Add FOV Controls
  //---------------------------------------------------------------------
  
  //Dome_Radius Control for scaling the preview shape
  $attrName ="Dome_Radius";
  if (!`attributeExists $attrName $baseNodeName`) {
  addAttr -ln $attrName -at double  -min 0.1 -max 1000000.0 -hasSoftMaxValue true -softMaxValue  360 -defaultValue 2.0 -keyable true $baseNodeName;
  print("Adding custom Attributes " + $baseNodeName +"." +$attrName + "\n");
  }
  
  /*
  //Field of View Preview
  $attrName ="fovPreview";
  if (!`attributeExists $attrName $baseNodeName`) {
    addAttr -ln $attrName  -nn "FOV Preview" -at bool -defaultValue true -keyable true $baseNodeName;
    print("Adding custom Attributes " + $baseNodeName +"." +$attrName + "\n");
  }
  */
  
  //FOV Display Mode
  string $attrName ="fovDisplayMode";
   if (!`attributeExists $attrName $baseNodeName`) {
    addAttr -ln $attrName  -at "enum" -en "Off:Wireframe:Shaded:Wireframe on Shaded" -defaultValue 1 -keyable true $baseNodeName;
    print("Adding custom Attributes " + $baseNodeName +"." +$attrName + "\n");
  }
  
  //FOV Preview Color
  $attrName ="fovPreviewColor";
  string $attrRName = "fovPreviewColorR";
  string $attrGName = "fovPreviewColorG";
  string $attrBName = "fovPreviewColorB";
  if (!`attributeExists $attrName $baseNodeName`) {
    addAttr -ln $attrName -at float3 -uac -keyable true $baseNodeName;
    addAttr -ln $attrRName -at "float" -p $attrName -keyable true $baseNodeName;
    addAttr -ln $attrGName -at "float" -p $attrName -keyable true $baseNodeName;
    addAttr -ln $attrBName -at "float" -p $attrName -keyable true $baseNodeName;
    setAttr -type float3 ($baseNodeName+"."+$attrName) 0.911 0.252086 0.10932;
    print("Adding custom Attributes " + $baseNodeName +"." +$attrName + "\n");
  }

  //FOV Preview Transparency
  $attrName ="fovPreviewTransparency";
  if (!`attributeExists $attrName $baseNodeName`) {
  addAttr -ln "fovPreviewTransparency"  -at double  -min 0 -max 1 -defaultValue 0.25 -keyable true $baseNodeName;
  print("Adding custom Attributes " + $baseNodeName +"." +$attrName + "\n");
  }
  
   //Double Sided Rendering
  $attrName ="doubleSidedShading";
  if (!`attributeExists $attrName $baseNodeName`) {
    addAttr -ln $attrName  -nn "Double Sided Shading" -at "enum" -en "Double Sided:Show Frontfaces:Show Backfaces" -min 0 -keyable true -defaultValue 2 $baseNodeName;
    print("Adding custom Attributes " + $baseNodeName +"." +$attrName + "\n");
  }
  
  if($NewDomeSetup){
  //Add the dome preview shape to the camera via the connected lens shader
    AEdomeAFL_FOV_AddPreviewShape($nodeName);
  }
  
}


//Create the attribute editor view for the domeAFL_FOV node
global proc AEdomeAFL_FOVTemplate( string $nodeName )
{
	AEswatchDisplay $nodeName;
	editorTemplate -beginScrollLayout;

    editorTemplate -beginLayout "Domemaster FOV Shader" -collapse 0;
      editorTemplate 	-beginNoOptimize;
      
      editorTemplate -label "Field of View" -annotation "\"Field of View\" controls the final rendered angular fisheye based view angle in degrees. This setting overrides the Maya camera based field of view setting." -addControl "FOV_Angle";
      
      editorTemplate -label "Dome Radius" -annotation  "This attribute lets you control the size of the field of view preview geometry. \nOn the (2D) DomeAFL_FOV shader it has no effect on the final rendered image." -addDynamicControl "Dome_Radius";
      
      editorTemplate -label "View Offset" -annotation "The \"View Offset\" controls shifts the current ray angles on the X/Y/Z axis. The valid \"View Offset\" ranges are -1.0 to 1.0" -addControl "View_Offset";
      
      editorTemplate -endNoOptimize;
    editorTemplate -endLayout;
       
    //Define the Stereo Display Controls
    editorTemplate -beginLayout "FOV Display Controls" -collapse 0;
      editorTemplate 	-beginNoOptimize;
    
      //Add the custom dynamic attributes to the node
      editorTemplate -callCustom "AEdomeAFL_FOV_AddDynamicAttrs" "AEdomeAFL_FOV_AddDynamicAttrs" "fovPreview";
      
      //editorTemplate -label "Field of View Preview" -annotation  "This will enable the field of view preview mode on the \"FOV Preview dome\" geometry." -addDynamicControl "fovPreview";
      
      editorTemplate -label "FOV Display Mode" -annotation  "Choose what shading mode should be used for the \"FOV Preview dome\" geometry." -addDynamicControl "fovDisplayMode";     
      
      editorTemplate -label "FOV Preview Color" -annotation  "This color picker controls the color of the \"FOV Preview dome\" geometry." -addDynamicControl "fovPreviewColor";

      editorTemplate -label "FOV Preview Transparency" -annotation  "Controls the transparency of the \"FOV Preview dome\" geometry" -addDynamicControl "fovPreviewTransparency";
      
      editorTemplate -callCustom "domeAFL_FOV_DoubleSidedPreviewShapeNew" "domeAFL_FOV_DoubleSidedPreviewShapeReplace" "doubleSidedShading"; 
      
      editorTemplate -endNoOptimize;
    editorTemplate -endLayout;

    //Define the image orientation attributes
    editorTemplate -beginLayout "Image Orientation" -collapse 0;
      editorTemplate 	-beginNoOptimize;
      editorTemplate -label "Flip X" -annotation "Flips the image horizontally" -addControl "Flip_Ray_X";	
      editorTemplate -label "Flip Y" -annotation  "Flips the image vertically." -addControl "Flip_Ray_Y";
      editorTemplate -endNoOptimize;
    editorTemplate -endLayout;
  
    //Hide the raw numerical camera and view offset fields
    editorTemplate -suppress "caching";
    editorTemplate -suppress "nodeState";
    //editorTemplate -suppress "View_Offset";
    //editorTemplate -suppress "domeVersion";

    AEdependNodeTemplate $nodeName;
    
    //Add any new controls that aren't listed above to the bottom of the attribute editor window 
    editorTemplate -addExtraControls;

  editorTemplate -endScrollLayout;
}
